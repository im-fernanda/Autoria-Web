
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');

const gravidade = 1;

class Player {
    constructor() {
        this.width = 100;
        this.height = 145;
        this.position = {
            x: 50,
            y: canvas.height - this.height
        }
        this.velocidade = {
            x: 0,
            y: 0
        }
        this.isJump = false;

        this.StandRight = new Image();
        this.StandRight.src = 'imgs/player/Idle.png';
        this.StandLeft = new Image();
        this.StandLeft.src = 'imgs/player/IdleLeft.png';
        this.RunRight = new Image();
        this.RunRight.src = 'imgs/player/Run.png';
        this.RunLeft = new Image();
        this.RunLeft.src = 'imgs/player/RunLeft.png';

        this.sprite = this.StandRight;

        this.frames = 0;
    }

    draw() { // Desenha o jogador
        ctx.drawImage(this.sprite, 128 * this.frames, 30,
            this.width, this.height,
            this.position.x, this.position.y,
            this.width, this.height);
    }

    jump() { // Função para o jogador pular
        if (!this.isJump) {
            this.velocidade.y = -15;
            this.isJump = true;
        }
    }

    update() {
        this.frames++;
        if (this.frames > 5) {
            this.frames = 0;
        }
        // Atualiza a posição do jogador
        this.position.x += this.velocidade.x;
        this.position.y += this.velocidade.y;

        // Aplica a gravidade
        this.velocidade.y += gravidade;

        // Não deixa o jogador sair do canvas
        if (this.position.x < 0) {
            this.position.x = 0;
        }
        if (this.position.x + this.width > canvas.width) {
            this.position.x = canvas.width - this.width;
        }

        // Colisão do chão
        if (this.position.y + this.height > canvas.height) {
            this.position.y = canvas.height - this.height;
            this.velocidade.y = 0;
            this.isJump = false;
        }


    }
}

class Background {
    constructor(porta, caminhoPorta, caminho) {
        this.porta = porta;
        this.spritePorta = new Image();
        this.spritePorta.src = caminhoPorta;
        this.sprite = new Image();
        this.sprite.src = caminho;
    }

    draw() { // Desenha o background
        ctx.drawImage(this.sprite, 0, 0, canvas.width, canvas.height)
        ctx.drawImage(this.spritePorta, this.porta.x, this.porta.y, this.porta.width, this.porta.height)
    }
}

const bg = [ // Vetor de backgrounds para facilitar a troca
    new Background({x:472, y:260, width:75, height:87}, 'imgs/door.png', 'imgs/background/cenario1.png'),
    new Background({x:100, y:100, width:100, height:100}, 'imgs/door.png','imgs/background/cenario2.png'),
    new Background({x:100, y:100, width:100, height:100}, 'imgs/door.png','imgs/background/cenario3.png')
]

let IndiceBG = 0;
let player = new Player();

function changeBackground() { // Função para trocar o background
    IndiceBG++;
    if (IndiceBG >= bg.length) {
        IndiceBG = 0; // Volta ao primeiro background
    }

    player = new Player()
}

function updateGameArea() { // Atualiza a tela de jogo
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    bg[IndiceBG].draw();
    player.update();
    player.draw();
}

function keyDownHandler(e) { // Função ao apertar a tecla
    if (e.key === 'ArrowRight') {
        player.velocidade.x = 5;
        player.sprite = player.RunRight;
    } else if (e.key === 'ArrowLeft') {
        player.velocidade.x = -5;
        player.sprite = player.RunLeft;
    } else if (e.key === 'ArrowUp') {
        player.jump();
    } else if (e.key === 'ArrowDown') {
        changeBackground();
    }
}

function keyUpHandler(e) { // Função ao soltar a tecla
    if (e.key === 'ArrowRight') {
        player.velocidade.x = 0;
        player.sprite = player.StandRight;
    } else if (e.key === 'ArrowLeft') {
        player.velocidade.x = 0;
        player.sprite = player.StandLeft;
    }
}

document.addEventListener('keydown', keyDownHandler);
document.addEventListener('keyup', keyUpHandler);

function gameLoop() {
    updateGameArea();
    requestAnimationFrame(gameLoop);
}

gameLoop();
