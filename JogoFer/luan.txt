
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');

        const gravity = 1;
        const jumpStrength = 15;

        class Player {
            constructor() {
                // ... (restante do código do jogador)
            }

            // ... (restante do código do jogador)
        }

        class Background {
            constructor(color, scenery, door, spritePath, doorSpritePath) {
                this.color = color;
                this.scenery = scenery;
                this.door = door;
                this.sprite = new Image();
                this.sprite.src = spritePath;
                this.doorSprite = new Image();
                this.doorSprite.src = doorSpritePath;
            }

            draw() {
                // Draw background color
                ctx.fillStyle = this.color;
                ctx.fillRect(0, 0, canvas.width, canvas.height);

                // Draw background sprite
                ctx.drawImage(this.sprite, 0, 0, canvas.width, canvas.height);

                // Draw door sprite
                ctx.drawImage(this.doorSprite, this.door.x, this.door.y, this.door.width, this.door.height);

                // Draw scenery information
                ctx.fillStyle = '#000';
                ctx.font = '20px Arial';
                ctx.fillText(`Current Scenery: ${this.scenery}`, 10, 30);
            }
        }

        const backgrounds = [
            new Background('green', 'Scenery 1', { x: 600, y: canvas.height - 100, width: 100, height: 100 }, 'path/to/background/sprite1.png', 'path/to/door/sprite1.png'),
            new Background('yellow', 'Scenery 2', { x: 500, y: canvas.height - 100, width: 100, height: 100 }, 'path/to/background/sprite2.png', 'path/to/door/sprite2.png'),
            // Add more backgrounds as needed
        ];

        let currentBackgroundIndex = 0;
        let player = new Player();

        function changeBackground() {
            currentBackgroundIndex++;
            if (currentBackgroundIndex >= backgrounds.length) {
                currentBackgroundIndex = 0; // Loop back to the first background
            }

            player = new Player();
        }

        function updateGameArea() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            backgrounds[currentBackgroundIndex].draw();
            player.update();
            player.draw();
        }

        function keyDownHandler(e) {
            if (e.key === 'ArrowRight') {
                player.velocityX = 5;
            } else if (e.key === 'ArrowLeft') {
                player.velocityX = -5;
            } else if (e.key === 'ArrowUp') {
                player.jump();
            } else if (e.key === 'ArrowDown') {
                changeBackground();
            }
        }

        function keyUpHandler(e) {
            if (e.key === 'ArrowRight' || e.key === 'ArrowLeft') {
                player.velocityX = 0;
            }
        }

        document.addEventListener('keydown', keyDownHandler);
        document.addEventListener('keyup', keyUpHandler);

        function gameLoop() {
            updateGameArea();
            requestAnimationFrame(gameLoop);
        }

        gameLoop();







---------------------------------- bg antes --------------------------------------
class Background {
    constructor({bgposition, bgwidth, bgheight, image}){
        this.bgposition = bgposition;
        this.bgwidth = bgwidth;
        this.bgheight = bgheight;

        this.bgImage = image;
}
    drawBG(){
        ctx.drawImage(this.bgImage, 0 + this.bgposition.x, 0, 
                    this.bgposition.x, this.bgposition.y, //700, 288, 
                    0, 0, 
                    this.bgwidth, this.bgheight);
    };
    
    updateBG() {
        this.drawBG();
        if (this.bgposition.x + Player.width > canvas.width) {
            this.bgposition.x = canvas.width - Player.width;
        }


    //     if (keys.ArrowRight.pressed){
    //         this.bgposition.x += this.velocity.x;
    //     } else if (keys.ArrowLeft.pressed){
    //         this.bgposition.x += this.velocity.x;
    //     } else if (keys.ArrowUp.pressed){
    //         this.bgposition.y += this.velocity.y;
    //     }

        }
}

